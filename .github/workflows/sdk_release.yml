name: 'Release SDK'

on:
  workflow_dispatch:
    inputs:
      release_version:
        type: choice
        description: 'Select the version type to release'
        required: true
        default: patch
        options:
          - patch
          - minor
          - major
          - beta
          - alpha

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}

jobs:
  release:
    uses: ./.github/workflows/ci.yml

  bump-version:
    runs-on: ubuntu-latest
    needs: release
    steps:

      - name: Bump version
        id: bump_version
        run: |
          # Fetch current version and determine new version
          current_version=$(node -p "require('./package.json').version")
    
          # Use npm version to handle all version bumping
          if [[ "${{ github.event.inputs.release_version }}" == "beta" || "${{ github.event.inputs.release_version }}" == "alpha" ]]; then
            new_version=$(npm version pre${{ github.event.inputs.release_version }} --no-git-tag-version --preid=${{ github.event.inputs.release_version }})
          else
            new_version=$(npm version ${{ github.event.inputs.release_version }} --no-git-tag-version)
          fi
    
          # Remove 'v' prefix from npm version output
          new_version=${new_version#v}

          # Bump package version and output new version
          npm version "$new_version" --no-git-tag-version
          echo "new_version=$new_version" >> $GITHUB_ENV
          echo "new_branch=release/$new_version" >> $GITHUB_ENV

          echo "Version bumped to $new_version"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
    
      - name: Create Release Branch
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          new_branch="release/${{ env.new_version }}"
          git checkout -b $new_branch
          git add package.json
          git commit -m "Bump version to ${{ env.new_version }}"
          git push origin $new_branch

      - name: Create Tag and Release
        run: |
          new_tag="v${{ env.new_version }}"
          git tag $new_tag
          git push origin $new_tag
          gh release create $new_tag --title "Release $new_tag" --notes "Release notes for $new_tag"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish Package
        run: |
          npm config set //registry.npmjs.org/:_authToken ${NODE_AUTH_TOKEN}
          npm ci
          npm run build
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.PUBLISH_TOKEN }}

      - name: Create Pull Request
        run: |
          gh pr create --title "Merge release ${{ env.new_version }} into main" --body "This is an automated pull request to update the version." --base main --head "release/${{ env.new_version }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
